pipeline {
    agent {
        label "executor"
    }
    triggers {
        cron("H/15 * * * *")
    }
    options {
        skipDefaultCheckout()
    }
    stages {
        stage ("Get tools config") {
            steps {
                script {
                    sh "curl -OL https://raw.githubusercontent.com/mcieciora/CarelessVaquita/refs/heads/${SCRIPT_BRANCH}/.tools_config"
                }
            }
        }
        stage ("Pull merge bot image") {
            steps {
                script {
                    withEnv(getToolsConfig()) {
                        sh "docker pull ${DOCKERHUB_REPO}:merge_bot"
                        sh "docker tag ${DOCKERHUB_REPO}:merge_bot merge_bot"
                    }
                }
            }
        }
        stage("Merge branch") {
            steps {
                script {
                    withCredentials([file(credentialsId: "cv_credentials", variable: "cv_credentials_file")]) {
                        sh "cp $cv_credentials_file .credentials"
                    }
                    withEnv(getToolsConfig()) {
                        return_value = sh(script: "docker run --rm --env-file .tools_config --env-file .credentials merge_bot --merge", returnStdout: true).trim()
                        if (!return_value.contains("merged successfully.")) {
                            unstable(return_value)
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                withEnv(getToolsConfig()) {
                    sh "docker rmi ${DOCKERHUB_REPO}:merge_bot"
                    cleanWs()
                }
            }
        }
    }
}

def getToolsConfig() {
    return readFile(".tools_config").split("\n") as List
}