pipeline {
    agent {
        label "master"
    }
    triggers {
        cron("H 21 * * *")
    }
    options {
        skipDefaultCheckout()
    }
    stages {
        stage ("Get tools config") {
            steps {
                script {
                    sh "curl -OL https://raw.githubusercontent.com/mcieciora/CarelessVaquita/refs/heads/${SCRIPT_BRANCH}/.tools_config"
                }
            }
        }
        stage ("Python verification") {
            steps {
                script {
                    def build = build job: "PythonDependenciesVerification_CarelessVaquita",
                    propagate: false
                    if (build.result != "SUCCESS") {
                        unstable("Stage reported as unstable")
                    }
                }
            }
        }
        stage ("Scan docker images") {
            steps {
                script {
                    def build = build job: "ScanDockerImages_CarelessVaquita",
                    propagate: false
                        if (build.result != "SUCCESS") {
                            unstable("Stage reported as unstable")
                        }
                    }
            }
        }
        stage ("Trigger nightly builds") {
            parallel {
                stage ("develop") {
                    steps {
                        script {
                            withEnv(getToolsConfig()) {
                                def build = build job: "ParametrizedTestPipeline_CarelessVaquita",
                                parameters: [
                                    string(name: "FLAG", value: "${DEFAULT_NIGHTLY_FLAG}"),
                                    string(name: "BRANCH", value: "develop"),
                                    booleanParam(name: "IS_NIGHTLY", value: true)
                                ]
                            }
                        }
                    }
                }
                stage ("master") {
                    steps {
                        script {
                            withEnv(getToolsConfig()) {
                                def build = build job: "ParametrizedTestPipeline_CarelessVaquita",
                                parameters: [
                                    string(name: "FLAG", value: "${DEFAULT_NIGHTLY_FLAG}"),
                                    string(name: "BRANCH", value: "master"),
                                    booleanParam(name: "IS_NIGHTLY", value: true)
                                ]
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}

def getToolsConfig() {
    return readFile(".tools_config").split("\n") as List
}