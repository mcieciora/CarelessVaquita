def customImage

pipeline {
    agent any
    parameters {
        choice(name: 'FLAG', choices: ["unittest", "smoke", "regression", "nightly"], description: "Choose test flag.")
        choice(name: 'TEST_GROUP', choices: ["iso", "grub", "image", "install"], description: "Choose test group.")
    }
    stages {
        stage ("Prepare docker test image") {
            steps {
                script {
                    customImage = docker.build("test_image:${env.BUILD_ID}", "-f automated_tests/Dockerfile .")
                }
            }
        }
        stage("Run tests") {
            steps {
                script {
                    customImage.inside("-v $WORKSPACE:/app") {
                        sh "python3 -m pytest -m ${env.FLAG} -k ${env.TEST_GROUP} -v --junitxml=results/${TEST_GROUP}_results.xml"
                    }
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: "**/*.xml"
            junit "**/*.xml"
            dir("$WORKSPACE") {
                deleteDir()
            }
        }
    }
}