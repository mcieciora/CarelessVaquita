def customImage

pipeline {
    agent any
    triggers {
        cron('H 6 * * *')
    }
    stages {
        stage ("Prepare docker test image") {
            steps {
                script {
                    customImage = docker.build("test_image:${env.BUILD_ID}", "-f automated_tests/Dockerfile .")
                }
            }
        }
        stage("Verify dependencies") {
            steps {
                script {
                    customImage.inside("-v $WORKSPACE:/app") {
                        return_value = sh(script: "python3 tools/python/python_dependencies_up_to_date_verification.py", returnStdout: true).trim()
                        if (return_value.contains("Consider upgrading")) {
                            unstable(return_value)
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            dir("$WORKSPACE") {
                deleteDir()
            }
        }
    }
}